{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetListView.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport CustomForm from \"../components/Form\";\nimport Tweet from \"../components/Tweet\";\nimport { withRouter } from \"react-router-dom\";\nimport Pagination from \"../components/Pagination\";\n\nclass TweetList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tweets: [],\n      page: 1,\n      count: 0,\n      range: 0,\n      next: \"\"\n    };\n\n    this.fetchArticles = () => {\n      console.log(this.state.page);\n      axios.get(\"http://127.0.0.1:8000/api/tweets/?page=\".concat(this.state.page)).then(res => {\n        console.log(res);\n        this.setState({\n          tweets: res.data.results,\n          count: res.data.count,\n          range: res.data.results.length,\n          next: res.data.next\n        });\n        console.log(this.state);\n      });\n    };\n\n    this.onChange = page => {\n      console.log(page);\n      console.log(this.state);\n      axios.get(\"http://127.0.0.1:8000/api/tweets/?page=\".concat(this.state.page)).then(res => {\n        this.setState({\n          tweets: res.data.results,\n          count: res.data.count,\n          range: res.data.results.length,\n          next: res.data.next\n        });\n        console.log(this.state);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchArticles();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n    console.log(this.state);\n\n    if (nextProps.token) {\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.token\n      };\n      console.log(this.state.page);\n      axios.get(\"http://127.0.0.1:8000/api/tweets/?page=\".concat(this.state.page)).then(res => {\n        this.setState({\n          tweets: res.data.results\n        });\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.token ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Tweets\"), React.createElement(Tweet, {\n      data: this.state.tweets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      data: {\n        page: this.state.page,\n        total: this.state.count,\n        range: this.state.range\n      },\n      nextPage: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Create Tweet\"), React.createElement(CustomForm, {\n      requestType: \"post\",\n      tweetID: null,\n      btnText: \"create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(TweetList));","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetListView.js"],"names":["React","axios","connect","CustomForm","Tweet","withRouter","Pagination","TweetList","Component","state","tweets","page","count","range","next","fetchArticles","console","log","get","then","res","setState","data","results","length","onChange","componentDidMount","componentWillReceiveProps","nextProps","token","defaults","headers","Authorization","props","render","total","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport CustomForm from \"../components/Form\";\nimport Tweet from \"../components/Tweet\";\nimport { withRouter } from \"react-router-dom\";\nimport Pagination from \"../components/Pagination\";\n\nclass TweetList extends React.Component {\n  state = {\n    tweets: [],\n    page: 1,\n    count: 0,\n    range: 0,\n    next: \"\"\n  };\n  fetchArticles = () => {\n    console.log(this.state.page);\n    axios\n      .get(`http://127.0.0.1:8000/api/tweets/?page=${this.state.page}`)\n      .then(res => {\n        console.log(res);\n        this.setState({\n          tweets: res.data.results,\n          count: res.data.count,\n          range: res.data.results.length,\n          next: res.data.next\n        });\n        console.log(this.state);\n      });\n  };\n  componentDidMount() {\n    this.fetchArticles();\n  }\n  componentWillReceiveProps(nextProps) {\n    console.log(nextProps);\n    console.log(this.state);\n    if (nextProps.token) {\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: this.props.token\n      };\n      console.log(this.state.page);\n      axios\n        .get(`http://127.0.0.1:8000/api/tweets/?page=${this.state.page}`)\n        .then(res => {\n          this.setState({\n            tweets: res.data.results\n          });\n        });\n    }\n  }\n\n  onChange = page => {\n    console.log(page);\n    console.log(this.state);\n    axios\n      .get(`http://127.0.0.1:8000/api/tweets/?page=${this.state.page}`)\n      .then(res => {\n        this.setState({\n          tweets: res.data.results,\n          count: res.data.count,\n          range: res.data.results.length,\n          next: res.data.next\n        });\n        console.log(this.state);\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.token ? (\n          <div>\n            <h2>Tweets</h2>\n            <Tweet data={this.state.tweets} />\n            <Pagination\n              data={{\n                page: this.state.page,\n                total: this.state.count,\n                range: this.state.range\n              }}\n              nextPage={this.onChange}\n            />\n            <h2>Create Tweet</h2>\n            <CustomForm requestType=\"post\" tweetID={null} btnText=\"create\" />\n          </div>\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\nexport default withRouter(connect(mapStateToProps)(TweetList));\n"]},"metadata":{},"sourceType":"module"}