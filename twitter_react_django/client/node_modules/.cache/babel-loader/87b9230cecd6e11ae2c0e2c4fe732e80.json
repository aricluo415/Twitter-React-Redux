{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/UserProfile.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Tweet from \"../components/Tweet\";\n\nclass UserProfile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: \"\",\n      follows: [],\n      tweets: []\n    };\n\n    this.fetchProfile = () => {\n      axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n      axios.defaults.xsrfCookieName = \"csrftoken\";\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \".concat(this.props.token)\n      };\n      axios.get(\"http://127.0.0.1:8000/api/profile/\".concat(localStorage.getItem(\"user\"))).then(res => {\n        this.setState({\n          user: res.data.user.username,\n          follows: res.data.follows.follows,\n          tweets: res.data.tweets\n        });\n        console.log(res.data);\n      }).catch(console.log(\"\"));\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\"); //this.fetchProfile();\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.token) {\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: newProps.token\n      };\n      const username = this.props.match.params.username;\n      axios.get(\"http://127.0.0.1:8000/api/profile/\".concat(username)).then(res => {\n        this.setState({\n          user: res.data.user.username,\n          follows: res.data.follows.follows,\n          tweets: res.data.tweets\n        });\n        console.log(res.data);\n      });\n    } else {\n      console.log(\"no token\");\n      this.setState({\n        profiles: []\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.user), React.createElement(Tweet, {\n      data: this.state.tweets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(UserProfile));","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/UserProfile.js"],"names":["React","axios","connect","withRouter","Tweet","UserProfile","Component","state","user","follows","tweets","fetchProfile","defaults","xsrfHeaderName","xsrfCookieName","headers","Authorization","props","token","get","localStorage","getItem","then","res","setState","data","username","console","log","catch","componentDidMount","componentWillReceiveProps","newProps","match","params","profiles","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Tweet from \"../components/Tweet\";\n\nclass UserProfile extends React.Component {\n  state = {\n    user: \"\",\n    follows: [],\n    tweets: []\n  };\n\n  fetchProfile = () => {\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${this.props.token}`\n    };\n    axios\n      .get(`http://127.0.0.1:8000/api/profile/${localStorage.getItem(\"user\")}`)\n      .then(res => {\n        this.setState({\n          user: res.data.user.username,\n          follows: res.data.follows.follows,\n          tweets: res.data.tweets\n        });\n        console.log(res.data);\n      })\n      .catch(console.log(\"\"));\n  };\n  componentDidMount() {\n    console.log(\"mounted\");\n    //this.fetchProfile();\n  }\n  componentWillReceiveProps(newProps) {\n    if (newProps.token) {\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: newProps.token\n      };\n      const username = this.props.match.params.username;\n      axios.get(`http://127.0.0.1:8000/api/profile/${username}`).then(res => {\n        this.setState({\n          user: res.data.user.username,\n          follows: res.data.follows.follows,\n          tweets: res.data.tweets\n        });\n        console.log(res.data);\n      });\n    } else {\n      console.log(\"no token\");\n      this.setState({\n        profiles: []\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>{this.state.user}</h2>\n        <Tweet data={this.state.tweets} />\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\nexport default withRouter(connect(mapStateToProps)(UserProfile));\n"]},"metadata":{},"sourceType":"module"}