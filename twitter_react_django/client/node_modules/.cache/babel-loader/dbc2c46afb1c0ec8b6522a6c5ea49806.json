{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/components/Pagination.js\";\nimport React from \"react\";\nimport { Pagination as Paginate } from \"antd\";\n\nconst Pagination = ({\n  postsPerPage,\n  totalPosts,\n  paginate\n}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Paginate, {\n    total: this.totalPosts,\n    showTotal: (total, range) => \"\".concat(range[0], \"-\").concat(range[1], \" of \").concat(total, \" items\"),\n    pageSize: 20,\n    defaultCurrent: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n};\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/components/Pagination.js"],"names":["React","Pagination","Paginate","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","total","range"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAU,IAAIC,QAAvB,QAAuC,MAAvC;;AAEA,MAAMD,UAAU,GAAG,CAAC;AAAEE,EAAAA,YAAF;AAAgBC,EAAAA,UAAhB;AAA4BC,EAAAA;AAA5B,CAAD,KAA4C;AAC7D,QAAMC,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUL,UAAU,GAAGD,YAAvB,CAArB,EAA2DI,CAAC,EAA5D,EAAgE;AAC9DD,IAAAA,WAAW,CAACI,IAAZ,CAAiBH,CAAjB;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE,KAAKH,UADd;AAEE,IAAA,SAAS,EAAE,CAACO,KAAD,EAAQC,KAAR,eACNA,KAAK,CAAC,CAAD,CADC,cACMA,KAAK,CAAC,CAAD,CADX,iBACqBD,KADrB,WAFb;AAKE,IAAA,QAAQ,EAAE,EALZ;AAME,IAAA,cAAc,EAAE,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAYD,CAnBD;;AAqBA,eAAeV,UAAf","sourcesContent":["import React from \"react\";\nimport { Pagination as Paginate } from \"antd\";\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <div>\n      <Paginate\n        total={this.totalPosts}\n        showTotal={(total, range) =>\n          `${range[0]}-${range[1]} of ${total} items`\n        }\n        pageSize={20}\n        defaultCurrent={1}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n"]},"metadata":{},"sourceType":"module"}