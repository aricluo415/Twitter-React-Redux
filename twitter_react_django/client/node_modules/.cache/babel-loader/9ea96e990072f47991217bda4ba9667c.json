{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetDetailView.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport CustomForm from \"../components/Form\";\nimport { connect } from \"react-redux\";\nimport { Card, Button, Form } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\nimport * as actions from \"../actions/tweetActions\";\n\nclass TweetDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      content: \"\",\n      author: \"\"\n    };\n\n    this.handleDelete = async event => {\n      event.preventDefault();\n\n      if (this.props.token !== null) {\n        const tweetID = this.props.match.params.tweetID;\n        axios.defaults.headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \".concat(this.props.token)\n        };\n        await axios.delete(\"http://127.0.0.1:8000/api/tweets/\".concat(tweetID, \"/\")).then(res => {\n          this.props.history.push(\"/\");\n        });\n      }\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.token && newProps.tweet.content) {\n      //this.props.getDetailTweet(this.props.match.params.tweetID);\n      this.setState({\n        content: newProps.tweet.content,\n        author: newProps.tweet.author.username\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.props.getDetailTweet(this.props.match.params.tweetID);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.author !== \"\" ? React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.author), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.content)) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"loading\"), localStorage.getItem(\"user\") === this.state.author ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(CustomForm, Object.assign({}, this.props, {\n      requestType: \"put\",\n      tweetID: this.props.match.params.tweetID,\n      btnText: \"Update\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Form, {\n      onSubmit: this.handleDelete,\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"danger\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Delete\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token,\n    tweet: state.tweetReducer.tweets\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDetailTweet: (id, token) => dispatch(actions.getDetailTweet(id, token))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TweetDetail));","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetDetailView.js"],"names":["React","axios","CustomForm","connect","Card","Button","Form","withRouter","actions","TweetDetail","Component","state","content","author","handleDelete","event","preventDefault","props","token","tweetID","match","params","defaults","headers","Authorization","delete","then","res","history","push","componentWillReceiveProps","newProps","tweet","setState","username","componentDidMount","getDetailTweet","render","localStorage","getItem","mapStateToProps","authReducer","tweetReducer","tweets","mapDispatchToProps","dispatch","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport CustomForm from \"../components/Form\";\nimport { connect } from \"react-redux\";\nimport { Card, Button, Form } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\nimport * as actions from \"../actions/tweetActions\";\n\nclass TweetDetail extends React.Component {\n  state = {\n    content: \"\",\n    author: \"\"\n  };\n  componentWillReceiveProps(newProps) {\n    if (newProps.token && newProps.tweet.content) {\n      //this.props.getDetailTweet(this.props.match.params.tweetID);\n      this.setState({\n        content: newProps.tweet.content,\n        author: newProps.tweet.author.username\n      });\n    }\n  }\n  componentDidMount() {\n    this.props.getDetailTweet(this.props.match.params.tweetID);\n  }\n  handleDelete = async event => {\n    event.preventDefault();\n    if (this.props.token !== null) {\n      const tweetID = this.props.match.params.tweetID;\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${this.props.token}`\n      };\n      await axios\n        .delete(`http://127.0.0.1:8000/api/tweets/${tweetID}/`)\n        .then(res => {\n          this.props.history.push(\"/\");\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.author !== \"\" ? (\n          <Card>\n            <h1>{this.state.author}</h1>\n            <p>{this.state.content}</p>\n          </Card>\n        ) : (\n          <h1>loading</h1>\n        )}\n\n        {localStorage.getItem(\"user\") === this.state.author ? (\n          <div>\n            <CustomForm\n              {...this.props}\n              requestType=\"put\"\n              tweetID={this.props.match.params.tweetID}\n              btnText=\"Update\"\n            />\n            <Form onSubmit={this.handleDelete} className=\"float-right\">\n              <Button type=\"danger\" htmlType=\"submit\">\n                Delete\n              </Button>\n            </Form>\n          </div>\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token,\n    tweet: state.tweetReducer.tweets\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getDetailTweet: (id, token) => dispatch(actions.getDetailTweet(id, token))\n  };\n};\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TweetDetail)\n);\n"]},"metadata":{},"sourceType":"module"}