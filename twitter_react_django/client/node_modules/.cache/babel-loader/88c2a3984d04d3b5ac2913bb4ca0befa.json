{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetListView.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport CustomForm from \"../components/Form\";\nimport Tweet from \"../components/Tweet\";\nimport { withRouter } from \"react-router-dom\";\nimport { Pagination } from \"antd\";\n\nclass TweetList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tweets: [],\n      page: 1,\n      count: 0,\n      range: 0\n    };\n\n    this.fetchArticles = () => {\n      axios.get(\"http://127.0.0.1:8000/api/tweets/?page=\".concat(this.state.page)).then(res => {\n        console.log(res);\n        this.setState({\n          tweets: res.data.results,\n          count: res.data.count,\n          range: res.data.results.length\n        });\n        console.log(this.state);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchArticles();\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.token) {\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: newProps.token\n      };\n      axios.get(\"http://127.0.0.1:8000/api/tweets/?page=\".concat(this.state.page)).then(res => {\n        this.setState({\n          tweets: res.data.results\n        });\n      });\n    } else {\n      console.log(\"no token\");\n      this.setState({\n        tweets: []\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.token ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Tweets\"), React.createElement(Tweet, {\n      data: this.state.tweets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      total: this.state.count,\n      showTotal: (total, range) => \"\".concat(range[0], \"-\").concat(range[1], \" of \").concat(total, \" items\"),\n      pageSize: this.state.range,\n      defaultCurrent: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Create Tweet\"), React.createElement(CustomForm, {\n      requestType: \"post\",\n      tweetID: null,\n      btnText: \"create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(TweetList));","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetListView.js"],"names":["React","axios","connect","CustomForm","Tweet","withRouter","Pagination","TweetList","Component","state","tweets","page","count","range","fetchArticles","get","then","res","console","log","setState","data","results","length","componentDidMount","componentWillReceiveProps","newProps","token","defaults","headers","Authorization","render","props","total","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport CustomForm from \"../components/Form\";\nimport Tweet from \"../components/Tweet\";\nimport { withRouter } from \"react-router-dom\";\nimport { Pagination } from \"antd\";\n\nclass TweetList extends React.Component {\n  state = {\n    tweets: [],\n    page: 1,\n    count: 0,\n    range: 0\n  };\n  fetchArticles = () => {\n    axios\n      .get(`http://127.0.0.1:8000/api/tweets/?page=${this.state.page}`)\n      .then(res => {\n        console.log(res);\n        this.setState({\n          tweets: res.data.results,\n          count: res.data.count,\n          range: res.data.results.length\n        });\n        console.log(this.state);\n      });\n  };\n  componentDidMount() {\n    this.fetchArticles();\n  }\n  componentWillReceiveProps(newProps) {\n    if (newProps.token) {\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: newProps.token\n      };\n      axios\n        .get(`http://127.0.0.1:8000/api/tweets/?page=${this.state.page}`)\n        .then(res => {\n          this.setState({\n            tweets: res.data.results\n          });\n        });\n    } else {\n      console.log(\"no token\");\n      this.setState({\n        tweets: []\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.token ? (\n          <div>\n            <h2>Tweets</h2>\n            <Tweet data={this.state.tweets} />\n            <Pagination\n              total={this.state.count}\n              showTotal={(total, range) =>\n                `${range[0]}-${range[1]} of ${total} items`\n              }\n              pageSize={this.state.range}\n              defaultCurrent={1}\n            />\n            <h2>Create Tweet</h2>\n            <CustomForm requestType=\"post\" tweetID={null} btnText=\"create\" />\n          </div>\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\nexport default withRouter(connect(mapStateToProps)(TweetList));\n"]},"metadata":{},"sourceType":"module"}