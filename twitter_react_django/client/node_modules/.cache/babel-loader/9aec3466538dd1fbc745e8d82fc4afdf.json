{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"http://127.0.0.1:8000/api/rest-auth/login/\", {\n      username: username,\n      password: password\n    }).then(res => {\n      console.log(res);\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      localStorage.setItem(\"user\", username);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    const user = {\n      username,\n      email,\n      password1,\n      password2\n    };\n    axios.post(\"http://127.0.0.1:8000/api/rest-auth/registration/\", user).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      localStorage.setItem(\"user\", username);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n    const follows = {\n      user: {\n        username: user.username\n      },\n      follows: []\n    };\n    axios.post(\"http://127.0.0.1:8000/api/follows/\", follows);\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/actions/authActions.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","then","res","console","log","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","user","follows","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  localStorage.removeItem(\"user\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios\n      .post(\"http://127.0.0.1:8000/api/rest-auth/login/\", {\n        username: username,\n        password: password\n      })\n      .then(res => {\n        console.log(res);\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"user\", username);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    const user = {\n      username,\n      email,\n      password1,\n      password2\n    };\n    axios\n      .post(\"http://127.0.0.1:8000/api/rest-auth/registration/\", user)\n      .then(res => {\n        const token = res.data.key;\n        const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"user\", username);\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout(3600));\n      })\n      .catch(err => {\n        dispatch(authFail(err));\n      });\n    const follows = { user: { username: user.username }, follows: [] };\n    axios.post(\"http://127.0.0.1:8000/api/follows/\", follows);\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}