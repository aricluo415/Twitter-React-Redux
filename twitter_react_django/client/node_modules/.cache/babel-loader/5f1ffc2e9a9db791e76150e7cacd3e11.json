{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetListView.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport CustomForm from \"../components/Form\";\nimport Tweet from \"../components/Tweet\";\nimport { withRouter } from \"react-router-dom\";\nimport Pagination from \"../components/Pagination\";\nimport * as actions from \"../actions/tweetActions\";\n\nclass TweetList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tweets: [],\n      page: 1,\n      count: 0,\n      range: 10\n    };\n\n    this.onChange = page => {\n      this.props.getTweets(page, this.props.token);\n      this.setState({\n        page: page\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getTweets({\n      page: 1,\n      token: this.props.token\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.token && nextProps.tweets.results) {\n      this.setState({\n        tweets: nextProps.tweets.results,\n        count: nextProps.tweets.count\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.loading ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Tweets\"), React.createElement(Tweet, {\n      data: this.state.tweets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      data: {\n        page: this.state.page,\n        total: this.state.count,\n        range: this.state.range\n      },\n      nextPage: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Create Tweet\"), React.createElement(CustomForm, {\n      requestType: \"post\",\n      tweetID: null,\n      btnText: \"create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token,\n    tweets: state.tweetReducer.tweets,\n    loading: state.tweetReducer.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTweets: (page, token) => dispatch(actions.getTweets(page, token))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TweetList));","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetListView.js"],"names":["React","axios","connect","CustomForm","Tweet","withRouter","Pagination","actions","TweetList","Component","state","tweets","page","count","range","onChange","props","getTweets","token","setState","componentDidMount","componentWillReceiveProps","nextProps","results","render","loading","total","mapStateToProps","authReducer","tweetReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport CustomForm from \"../components/Form\";\nimport Tweet from \"../components/Tweet\";\nimport { withRouter } from \"react-router-dom\";\nimport Pagination from \"../components/Pagination\";\nimport * as actions from \"../actions/tweetActions\";\n\nclass TweetList extends React.Component {\n  state = {\n    tweets: [],\n    page: 1,\n    count: 0,\n    range: 10\n  };\n\n  componentDidMount() {\n    this.props.getTweets({ page: 1, token: this.props.token });\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.token && nextProps.tweets.results) {\n      this.setState({\n        tweets: nextProps.tweets.results,\n        count: nextProps.tweets.count\n      });\n    }\n  }\n\n  onChange = page => {\n    this.props.getTweets(page, this.props.token);\n    this.setState({ page: page });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.loading ? (\n          <div>\n            <h2>Tweets</h2>\n            <Tweet data={this.state.tweets} />\n            <Pagination\n              data={{\n                page: this.state.page,\n                total: this.state.count,\n                range: this.state.range\n              }}\n              nextPage={this.onChange}\n            />\n            <h2>Create Tweet</h2>\n            <CustomForm requestType=\"post\" tweetID={null} btnText=\"create\" />\n          </div>\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token,\n    tweets: state.tweetReducer.tweets,\n    loading: state.tweetReducer.loading\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTweets: (page, token) => dispatch(actions.getTweets(page, token))\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TweetList)\n);\n"]},"metadata":{},"sourceType":"module"}