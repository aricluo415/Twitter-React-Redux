{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetDetailView.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport CustomForm from \"../components/Form\";\nimport { connect } from \"react-redux\";\nimport { Card, Button, Form } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\n\nclass TweetDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tweet: {}\n    };\n\n    this.handleDelete = async event => {\n      event.preventDefault();\n\n      if (this.props.token !== null) {\n        console.log(this.props.match.params);\n        const tweetID = this.props.match.params.tweetID;\n        axios.defaults.headers = {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Token \".concat(this.props.token)\n        };\n        await axios.delete(\"http://127.0.0.1:8000/api/tweets/\".concat(tweetID, \"/\")).then(res => {\n          console.log(res);\n          this.props.history.push(\"/\");\n        });\n      }\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.token) {\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: newProps.token\n      };\n      const tweetID = this.props.match.params.tweetID;\n      axios.get(\"http://127.0.0.1:8000/api/tweets/\".concat(tweetID)).then(res => {\n        this.setState({\n          tweet: res.data\n        });\n        console.log(this.state.tweet);\n      });\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(localStorage.getItem(\"user\"));\n    let currUser = \"\";\n\n    if (this.state.tweet.author) {\n      console.log(this.state.tweet.author);\n      currUser = this.state.tweet.author.username;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.tweet.content ? React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.tweet.author.username), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.tweet.content)) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), localStorage.getItem(\"user\") === currUser ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(CustomForm, Object.assign({}, this.props, {\n      requestType: \"put\",\n      tweetID: this.props.match.params.tweetID,\n      btnText: \"Update\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(Form, {\n      onSubmit: this.handleDelete,\n      className: \"float-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"danger\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Delete\"))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(TweetDetail));","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetDetailView.js"],"names":["React","axios","CustomForm","connect","Card","Button","Form","withRouter","TweetDetail","Component","state","tweet","handleDelete","event","preventDefault","props","token","console","log","match","params","tweetID","defaults","headers","Authorization","delete","then","res","history","push","componentWillReceiveProps","newProps","get","setState","data","render","localStorage","getItem","currUser","author","username","content","mapStateToProps","authReducer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport CustomForm from \"../components/Form\";\nimport { connect } from \"react-redux\";\nimport { Card, Button, Form } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\n\nclass TweetDetail extends React.Component {\n  state = {\n    tweet: {}\n  };\n  componentWillReceiveProps(newProps) {\n    if (newProps.token) {\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: newProps.token\n      };\n      const tweetID = this.props.match.params.tweetID;\n      axios.get(`http://127.0.0.1:8000/api/tweets/${tweetID}`).then(res => {\n        this.setState({\n          tweet: res.data\n        });\n        console.log(this.state.tweet);\n      });\n    }\n  }\n  handleDelete = async event => {\n    event.preventDefault();\n    if (this.props.token !== null) {\n      console.log(this.props.match.params);\n      const tweetID = this.props.match.params.tweetID;\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${this.props.token}`\n      };\n      await axios\n        .delete(`http://127.0.0.1:8000/api/tweets/${tweetID}/`)\n        .then(res => {\n          console.log(res);\n          this.props.history.push(\"/\");\n        });\n    }\n  };\n\n  render() {\n    console.log(this.props);\n    console.log(localStorage.getItem(\"user\"));\n    let currUser = \"\";\n    if (this.state.tweet.author) {\n      console.log(this.state.tweet.author);\n      currUser = this.state.tweet.author.username;\n    }\n\n    return (\n      <div>\n        {this.state.tweet.content ? (\n          <Card>\n            <h1>{this.state.tweet.author.username}</h1>\n            <p>{this.state.tweet.content}</p>\n          </Card>\n        ) : (\n          <div />\n        )}\n\n        {localStorage.getItem(\"user\") === currUser ? (\n          <div>\n            <CustomForm\n              {...this.props}\n              requestType=\"put\"\n              tweetID={this.props.match.params.tweetID}\n              btnText=\"Update\"\n            />\n            <Form onSubmit={this.handleDelete} className=\"float-right\">\n              <Button type=\"danger\" htmlType=\"submit\">\n                Delete\n              </Button>\n            </Form>\n          </div>\n        ) : (\n          <div />\n        )}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token\n  };\n};\nexport default withRouter(connect(mapStateToProps)(TweetDetail));\n"]},"metadata":{},"sourceType":"module"}