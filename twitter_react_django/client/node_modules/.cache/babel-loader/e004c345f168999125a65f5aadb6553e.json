{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/components/Form.js\";\nimport React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport * as actions from \"../actions/tweetActions\";\nconst FormItem = Form.Item;\n\nclass CustomForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFormSubmit = async (event, requestType, tweetID) => {\n      event.preventDefault();\n      const postObj = {\n        content: event.target.elements.content.value\n      };\n\n      if (requestType === \"post\") {\n        this.props.postTweet(postObj, this.props.token);\n      } else if (requestType === \"put\") {\n        this.props.updateTweet(tweetID, postObj, this.props.token);\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: event => this.handleFormSubmit(event, this.props.requestType, this.props.tweetID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      label: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"content\",\n      placeholder: \"Enter some content ...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, this.props.btnText))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postTweet: (tweet, token) => dispatch(actions.postTweet(tweet, token)),\n    updateTweet: (id, updateObj, token) => dispatch(actions.updateTweet(id, updateObj, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomForm);","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/components/Form.js"],"names":["React","Form","Input","Button","connect","axios","actions","FormItem","Item","CustomForm","Component","handleFormSubmit","event","requestType","tweetID","preventDefault","postObj","content","target","elements","value","props","postTweet","token","updateTweet","render","btnText","mapStateToProps","state","authReducer","mapDispatchToProps","dispatch","tweet","id","updateObj"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,yBAAzB;AAEA,MAAMC,QAAQ,GAAGN,IAAI,CAACO,IAAtB;;AAEA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SACvCC,gBADuC,GACpB,OAAOC,KAAP,EAAcC,WAAd,EAA2BC,OAA3B,KAAuC;AACxDF,MAAAA,KAAK,CAACG,cAAN;AAEA,YAAMC,OAAO,GAAG;AACdC,QAAAA,OAAO,EAAEL,KAAK,CAACM,MAAN,CAAaC,QAAb,CAAsBF,OAAtB,CAA8BG;AADzB,OAAhB;;AAIA,UAAIP,WAAW,KAAK,MAApB,EAA4B;AAC1B,aAAKQ,KAAL,CAAWC,SAAX,CAAqBN,OAArB,EAA8B,KAAKK,KAAL,CAAWE,KAAzC;AACD,OAFD,MAEO,IAAIV,WAAW,KAAK,KAApB,EAA2B;AAChC,aAAKQ,KAAL,CAAWG,WAAX,CAAuBV,OAAvB,EAAgCE,OAAhC,EAAyC,KAAKK,KAAL,CAAWE,KAApD;AACD;AACF,KAbsC;AAAA;;AAevCE,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAEb,KAAK,IACb,KAAKD,gBAAL,CACEC,KADF,EAEE,KAAKS,KAAL,CAAWR,WAFb,EAGE,KAAKQ,KAAL,CAAWP,OAHb,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,WAAW,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,EAYE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKO,KAAL,CAAWK,OADd,CADF,CAZF,CADF,CADF;AAsBD;;AAtCsC;;AAyCzC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,KAAK,EAAEK,KAAK,CAACC,WAAN,CAAkBN;AADpB,GAAP;AAGD,CAJD;;AAKA,MAAMO,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLT,IAAAA,SAAS,EAAE,CAACU,KAAD,EAAQT,KAAR,KAAkBQ,QAAQ,CAACzB,OAAO,CAACgB,SAAR,CAAkBU,KAAlB,EAAyBT,KAAzB,CAAD,CADhC;AAELC,IAAAA,WAAW,EAAE,CAACS,EAAD,EAAKC,SAAL,EAAgBX,KAAhB,KACXQ,QAAQ,CAACzB,OAAO,CAACkB,WAAR,CAAoBS,EAApB,EAAwBC,SAAxB,EAAmCX,KAAnC,CAAD;AAHL,GAAP;AAKD,CAND;;AAQA,eAAenB,OAAO,CACpBuB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbrB,UAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport * as actions from \"../actions/tweetActions\";\n\nconst FormItem = Form.Item;\n\nclass CustomForm extends React.Component {\n  handleFormSubmit = async (event, requestType, tweetID) => {\n    event.preventDefault();\n\n    const postObj = {\n      content: event.target.elements.content.value\n    };\n\n    if (requestType === \"post\") {\n      this.props.postTweet(postObj, this.props.token);\n    } else if (requestType === \"put\") {\n      this.props.updateTweet(tweetID, postObj, this.props.token);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Form\n          onSubmit={event =>\n            this.handleFormSubmit(\n              event,\n              this.props.requestType,\n              this.props.tweetID\n            )\n          }\n        >\n          <FormItem label=\"Content\">\n            <Input name=\"content\" placeholder=\"Enter some content ...\" />\n          </FormItem>\n          <FormItem>\n            <Button type=\"primary\" htmlType=\"submit\">\n              {this.props.btnText}\n            </Button>\n          </FormItem>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    postTweet: (tweet, token) => dispatch(actions.postTweet(tweet, token)),\n    updateTweet: (id, updateObj, token) =>\n      dispatch(actions.updateTweet(id, updateObj, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomForm);\n"]},"metadata":{},"sourceType":"module"}