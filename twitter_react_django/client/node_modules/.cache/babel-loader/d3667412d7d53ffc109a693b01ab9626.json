{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Provider } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Login } from \"./components/Login\";\nimport store from \"./store\";\nimport * as actions from \"./actions/authActions\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      connected: \"not connected\"\n    };\n  }\n\n  callAPI() {\n    fetch(\"/connected\").then(res => res.text()).then(res => {\n      console.log(res);\n      this.setState({\n        connected: res\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.connected), React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(Login, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/App.js"],"names":["React","Component","Provider","connect","Login","store","actions","App","constructor","props","state","connected","callAPI","fetch","then","res","text","console","log","setState","componentWillMount","componentDidMount","onTryAutoSignup","render","logo","mapStateToProps","isAuthenticated","token","mapDispatchToProps","dispatch","authCheckState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;;AAGA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAb;AACD;;AACDC,EAAAA,OAAO,GAAG;AACRC,IAAAA,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,WAAKI,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAEI;AAAb,OAAd;AACD,KALH;AAMD;;AACDK,EAAAA,kBAAkB,GAAG;AACnB,SAAKR,OAAL;AACD;;AACDS,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,KAAL,CAAWa,eAAX;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAElB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKK,KAAL,CAAWC,SAAf,CADF,EAEE;AAAK,MAAA,GAAG,EAAEa,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF;AAWD;;AA/ByB;;AAiC5B,MAAMC,eAAe,GAAGf,KAAK,IAAI;AAC/B,SAAO;AACLgB,IAAAA,eAAe,EAAEhB,KAAK,CAACiB,KAAN,KAAgB;AAD5B,GAAP;AAGD,CAJD;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLP,IAAAA,eAAe,EAAE,MAAMO,QAAQ,CAACvB,OAAO,CAACwB,cAAR,EAAD;AAD1B,GAAP;AAGD,CAJD;;AAKA,eAAe3B,OAAO,CACpBsB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbrB,GAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Provider } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Login } from \"./components/Login\";\n\nimport store from \"./store\";\nimport * as actions from \"./actions/authActions\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { connected: \"not connected\" };\n  }\n  callAPI() {\n    fetch(\"/connected\")\n      .then(res => res.text())\n      .then(res => {\n        console.log(res);\n        this.setState({ connected: res });\n      });\n  }\n  componentWillMount() {\n    this.callAPI();\n  }\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <a>{this.state.connected}</a>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </header>\n          <Login />\n        </div>\n      </Provider>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}