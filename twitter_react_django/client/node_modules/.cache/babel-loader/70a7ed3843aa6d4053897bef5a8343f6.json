{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/components/Form.js\";\nimport React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport * as actions from \"../actions/tweetActions\";\nconst FormItem = Form.Item;\n\nclass CustomForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFormSubmit = async (event, requestType, tweetID, passFunc) => {\n      event.preventDefault();\n      const postObj = {\n        content: event.target.elements.content.value\n      };\n\n      if (requestType === \"post\") {\n        this.props.postTweet(postObj, this.props.token);\n        this.props.onChange(1);\n        console.log(\"pos\", this.props);\n      } else if (requestType === \"put\") {\n        this.props.updateTweet(tweetID, postObj, this.props.token);\n      }\n    };\n  }\n\n  render() {\n    console.log(this.props.passFunc);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.loading ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(Form, {\n      onSubmit: event => this.handleFormSubmit(event, this.props.requestType, this.props.tweetID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      label: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"content\",\n      placeholder: \"Enter some content ...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.btnText))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token,\n    loading: state.tweetReducer.loading\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    postTweet: (tweet, token) => dispatch(actions.postTweet(tweet, token, ownProps)),\n    updateTweet: (id, updateObj, token) => dispatch(actions.updateTweet(id, updateObj, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomForm);","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/components/Form.js"],"names":["React","Form","Input","Button","connect","axios","actions","FormItem","Item","CustomForm","Component","handleFormSubmit","event","requestType","tweetID","passFunc","preventDefault","postObj","content","target","elements","value","props","postTweet","token","onChange","console","log","updateTweet","render","loading","btnText","mapStateToProps","state","authReducer","tweetReducer","mapDispatchToProps","dispatch","ownProps","tweet","id","updateObj"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport * as actions from \"../actions/tweetActions\";\n\nconst FormItem = Form.Item;\n\nclass CustomForm extends React.Component {\n  handleFormSubmit = async (event, requestType, tweetID, passFunc) => {\n    event.preventDefault();\n\n    const postObj = {\n      content: event.target.elements.content.value\n    };\n\n    if (requestType === \"post\") {\n      this.props.postTweet(postObj, this.props.token);\n      this.props.onChange(1);\n      console.log(\"pos\", this.props);\n    } else if (requestType === \"put\") {\n      this.props.updateTweet(tweetID, postObj, this.props.token);\n    }\n  };\n\n  render() {\n    console.log(this.props.passFunc);\n    return (\n      <div>\n        {this.props.loading ? (\n          <h1>Loading</h1>\n        ) : (\n          <Form\n            onSubmit={event =>\n              this.handleFormSubmit(\n                event,\n                this.props.requestType,\n                this.props.tweetID\n              )\n            }\n          >\n            <FormItem label=\"Content\">\n              <Input name=\"content\" placeholder=\"Enter some content ...\" />\n            </FormItem>\n            <FormItem>\n              <Button type=\"primary\" htmlType=\"submit\">\n                {this.props.btnText}\n              </Button>\n            </FormItem>\n          </Form>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token,\n    loading: state.tweetReducer.loading\n  };\n};\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    postTweet: (tweet, token) =>\n      dispatch(actions.postTweet(tweet, token, ownProps)),\n    updateTweet: (id, updateObj, token) =>\n      dispatch(actions.updateTweet(id, updateObj, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomForm);\n"]},"metadata":{},"sourceType":"module"}