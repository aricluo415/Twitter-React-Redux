{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetListView.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport CustomForm from \"../components/Form\";\nimport Tweet from \"../components/Tweet\";\nimport { withRouter } from \"react-router-dom\";\nimport Pagination from \"../components/Pagination\";\nimport * as actions from \"../actions/tweetActions\";\nimport Hoc from \"../hoc/hoc\";\n\nclass TweetList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tweets: [],\n      page: 1,\n      count: 0,\n      range: 10\n    };\n\n    this.onChange = page => {\n      this.props.getTweets(page, this.props.token);\n      this.setState({\n        page: page\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounted\", this.props.token);\n\n    if (this.props.token !== undefined && this.props.token !== null) {\n      const page = 1;\n      this.props.getTweets(page, this.props.token);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.token !== this.props.token && nextProps.token !== undefined && nextProps.token !== null) {\n      console.log(nextProps);\n      this.props.getTweets(1, this.props.token);\n    }\n  }\n\n  render() {\n    return React.createElement(Hoc, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.loading ? React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Loading....\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Tweets\"), React.createElement(Tweet, {\n      data: this.state.tweets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      data: {\n        page: this.state.page,\n        total: this.state.count,\n        range: this.state.range\n      },\n      nextPage: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Create Tweet\"), React.createElement(CustomForm, {\n      requestType: \"post\",\n      tweetID: null,\n      btnText: \"create\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token,\n    tweets: state.tweetReducer.tweets,\n    loading: state.tweetReducer.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTweets: (page, token) => dispatch(actions.getTweets(page, token))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(TweetList));","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/containers/TweetListView.js"],"names":["React","axios","connect","CustomForm","Tweet","withRouter","Pagination","actions","Hoc","TweetList","Component","state","tweets","page","count","range","onChange","props","getTweets","token","setState","componentDidMount","console","log","undefined","componentWillReceiveProps","nextProps","render","loading","total","mapStateToProps","authReducer","tweetReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport CustomForm from \"../components/Form\";\nimport Tweet from \"../components/Tweet\";\nimport { withRouter } from \"react-router-dom\";\nimport Pagination from \"../components/Pagination\";\nimport * as actions from \"../actions/tweetActions\";\nimport Hoc from \"../hoc/hoc\";\n\nclass TweetList extends React.Component {\n  state = {\n    tweets: [],\n    page: 1,\n    count: 0,\n    range: 10\n  };\n\n  componentDidMount() {\n    console.log(\"mounted\", this.props.token);\n    if (this.props.token !== undefined && this.props.token !== null) {\n      const page = 1;\n      this.props.getTweets(page, this.props.token);\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.token !== this.props.token &&\n      nextProps.token !== undefined &&\n      nextProps.token !== null\n    ) {\n      console.log(nextProps);\n      this.props.getTweets(1, this.props.token);\n    }\n  }\n\n  onChange = page => {\n    this.props.getTweets(page, this.props.token);\n    this.setState({ page: page });\n  };\n\n  render() {\n    return (\n      <Hoc>\n        {this.props.loading ? (\n          <h2>Loading....</h2>\n        ) : (\n          <div>\n            <h2>Tweets</h2>\n            <Tweet data={this.state.tweets} />\n            <Pagination\n              data={{\n                page: this.state.page,\n                total: this.state.count,\n                range: this.state.range\n              }}\n              nextPage={this.onChange}\n            />\n            <h2>Create Tweet</h2>\n            <CustomForm requestType=\"post\" tweetID={null} btnText=\"create\" />\n          </div>\n        )}\n      </Hoc>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    token: state.authReducer.token,\n    tweets: state.tweetReducer.tweets,\n    loading: state.tweetReducer.loading\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    getTweets: (page, token) => dispatch(actions.getTweets(page, token))\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TweetList)\n);\n"]},"metadata":{},"sourceType":"module"}