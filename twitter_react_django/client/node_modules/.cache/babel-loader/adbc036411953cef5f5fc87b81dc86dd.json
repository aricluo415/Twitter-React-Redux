{"ast":null,"code":"var _jsxFileName = \"/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/components/Form.js\";\nimport React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport * as actions from \"../actions/tweetActions\";\nconst FormItem = Form.Item;\n\nclass CustomForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFormSubmit = async (event, requestType, tweetID) => {\n      //event.preventDefault();\n      const postObj = {\n        content: event.target.elements.content.value\n      };\n      axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n      axios.defaults.xsrfCookieName = \"csrftoken\";\n      axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Token \".concat(this.props.token)\n      };\n\n      if (requestType === \"post\") {\n        await axios.post(\"http://127.0.0.1:8000/api/tweets/\", postObj).then(res => {\n          if (res.status === 201) {\n            this.props.history.push(\"/\");\n          }\n        });\n      } else if (requestType === \"put\") {\n        await axios.put(\"http://127.0.0.1:8000/api/tweets/\".concat(tweetID, \"/\"), postObj).then(res => {\n          if (res.status === 200) {\n            this.props.history.push(\"/\");\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: event => this.handleFormSubmit(event, this.props.requestType, this.props.tweetID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      label: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"content\",\n      placeholder: \"Enter some content ...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.props.btnText))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postTweet: tweet => dispatch(actions.postTweet(tweet)),\n    updateTweet: (id, token) => dispatch(actions.updateTweet(id, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomForm);","map":{"version":3,"sources":["/Users/aricluo/VS_Code_Projects/Twitter-React-Django/twitter_react_django/twitter_react_django/client/src/components/Form.js"],"names":["React","Form","Input","Button","connect","axios","actions","FormItem","Item","CustomForm","Component","handleFormSubmit","event","requestType","tweetID","postObj","content","target","elements","value","defaults","xsrfHeaderName","xsrfCookieName","headers","Authorization","props","token","post","then","res","status","history","push","put","render","btnText","mapStateToProps","state","mapDispatchToProps","dispatch","postTweet","tweet","updateTweet","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport * as actions from \"../actions/tweetActions\";\n\nconst FormItem = Form.Item;\n\nclass CustomForm extends React.Component {\n  handleFormSubmit = async (event, requestType, tweetID) => {\n    //event.preventDefault();\n\n    const postObj = {\n      content: event.target.elements.content.value\n    };\n\n    axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\n    axios.defaults.xsrfCookieName = \"csrftoken\";\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Token ${this.props.token}`\n    };\n\n    if (requestType === \"post\") {\n      await axios\n        .post(\"http://127.0.0.1:8000/api/tweets/\", postObj)\n        .then(res => {\n          if (res.status === 201) {\n            this.props.history.push(`/`);\n          }\n        });\n    } else if (requestType === \"put\") {\n      await axios\n        .put(`http://127.0.0.1:8000/api/tweets/${tweetID}/`, postObj)\n        .then(res => {\n          if (res.status === 200) {\n            this.props.history.push(`/`);\n          }\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Form\n          onSubmit={event =>\n            this.handleFormSubmit(\n              event,\n              this.props.requestType,\n              this.props.tweetID\n            )\n          }\n        >\n          <FormItem label=\"Content\">\n            <Input name=\"content\" placeholder=\"Enter some content ...\" />\n          </FormItem>\n          <FormItem>\n            <Button type=\"primary\" htmlType=\"submit\">\n              {this.props.btnText}\n            </Button>\n          </FormItem>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    postTweet: tweet => dispatch(actions.postTweet(tweet)),\n    updateTweet: (id, token) => dispatch(actions.updateTweet(id, token))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomForm);\n"]},"metadata":{},"sourceType":"module"}